@model List<InvWebApp.Models.User>
@using InvWebApp.Models

@{
    ViewData["Title"] = "Manage Roles";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var allRoles = ViewBag.AllRoles as List<Role> ?? new List<Role>();
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fa fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fa fa-exclamation-circle"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">User Role Management</h4>
                    <p class="mb-0">Assign and manage user roles</p>
                </div>
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-info">
                            <i class="fa fa-info-circle"></i> No users found.
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>User</th>
                                        <th>Email</th>
                                        <th>Current Roles</th>
                                        @foreach (var role in allRoles)
                                        {
                                            <th class="text-center">@role.RoleName</th>
                                        }
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@user.UserName</strong>
                                            </td>
                                            <td>@user.Email</td>
                                            <td>
                                                @if (user.UserRoles != null && user.UserRoles.Any())
                                                {
                                                    <div class="role-badges">
                                                        @foreach (var userRole in user.UserRoles)
                                                        {
                                                            <span class="badge bg-success me-1">@userRole.Role.RoleName</span>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No roles assigned</span>
                                                }
                                            </td>
                                            @foreach (var role in allRoles)
                                            {
                                                var isAssigned = user.UserRoles?.Any(ur => ur.RoleId == role.Id) ?? false;
                                                <td class="text-center">
                                                    <form asp-action="UpdateRole" method="post" class="role-form">
                                                        <input type="hidden" name="userId" value="@user.Id" />
                                                        <input type="hidden" name="roleId" value="@role.Id" />
                                                        <div class="form-check form-switch d-inline-block">
                                                            <input class="form-check-input role-checkbox"
                                                                   type="checkbox"
                                                                   name="isAssigned"
                                                                   value="true"
                                                            @(isAssigned ? "checked" : "")
                                                                   onchange="this.form.submit()"
                                                                   data-user="@user.UserName"
                                                                   data-role="@role.RoleName">
                                                        </div>
                                                    </form>
                                                </td>
                                            }
                                            <td>
                                                <a href="@Url.Action("Edit", new { id = user.Id })"
                                                   class="btn btn-sm btn-outline-primary"
                                                   title="Edit User">
                                                    <i class="fa fa-edit"></i>
                                                </a>
                                                <a href="@Url.Action("Details", new { id = user.Id })"
                                                   class="btn btn-sm btn-outline-info"
                                                   title="View Details">
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enhanced auto-submit with confirmation
        document.querySelectorAll('.role-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const userName = this.getAttribute('data-user');
                const roleName = this.getAttribute('data-role');
                const action = this.checked ? 'assign' : 'remove';

                if (confirm(`Are you sure you want to ${action} the '${roleName}' role from ${userName}?`)) {
                    this.form.submit();
                } else {
                    this.checked = !this.checked; // Revert the checkbox
                }
            });
        });

        // Add loading indicator
        document.querySelectorAll('form.role-form').forEach(form => {
            form.addEventListener('submit', function() {
                const submitBtn = this.querySelector('button[type="submit"]');
                if (submitBtn) {
                    submitBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Updating...';
                    submitBtn.disabled = true;
                }
            });
        });
    </script>

    <style>
        .role-badges .badge {
            font-size: 0.85em;
            padding: 0.35em 0.65em;
        }
        .form-switch {
            transform: scale(1.2);
        }
        .table th {
            vertical-align: middle;
        }
        .table td {
            vertical-align: middle;
        }
    </style>
}